% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check-STclustering.R
\name{stclust}
\alias{stclust}
\title{evaluate the time series similarity and spatial aggregation of clustering results.}
\usage{
stclust(
  x = NULL,
  check_mode = c("spatial", "temporal"),
  cc = checkCond(),
  cluster = NULL,
  geo = NULL,
  neighbor_method = spdep::knearneigh,
  neighbor_option = list(k = 4),
  ts_num_factor = 1L,
  set_crs = 6670,
  nsim = 999
)
}
\arguments{
\item{x}{クラスタリングに指定したデータセット (配列)。列: 位置情報、行: 時系列データとして作成}

\item{check_mode}{クラスタリングの精度検証 について、時系列 ("temporal"), 空間 ("spatial"), またはこれらの両方を指定します。}

\item{cc}{\code{checkCond} 関数をで、時系列及び空間データの精度確認基準を指定します。}

\item{cluster}{クラスタリングの結果ラベルを指定します。内部処理ではfactor型に変換されます。}

\item{geo}{位置情報}

\item{neighbor_method}{隣接点を計算する関数を指定します。}

\item{neighbor_option}{\code{neighbor_method} で指定した関数の設定 (引数) を名前付きで指定します。}

\item{ts_num_factor}{時系列の動的因子モデル (sparseDFM) の因子数を正の整数値で指定します。
自動で最適な因子数を取得する場合は \code{NULL} を指定します。}

\item{set_crs}{\code{neighbor_method} で指定した関数を実行するために最適なCRS値を指定します。}

\item{nsim}{\code{spdep::joincount.mc} の繰り返し回数}
}
\value{
\itemize{
\item results: 時系列類似性と空間的集塊性の検定結果の一覧表 (data.frame)
\item check_mode: 時系列類似性 (temporal) と空間的集塊性 (spatial) の設定
\item sp_model: Join-Count検定の結果一覧
** joincount: Join-Count検定の結果
** joincount_mc: Joun-Countのモンテカルロ・シミュレーション結果
** neighbor_list: 隣接点情報
** weight_list: 空間重み付き行列 (listw)
\item ts_model: 時系列データの動的因子モデルによる結果
\item geo: 時系列類似性と空間的集塊性の結果を \code{geo} 引数で指定した位置情報にマージし、sf形式のデータとした
\item check_conditions: 時系列類似性と空間的集塊性のチェック基準
\item data: \code{x} 引数に指定したデータ
\item cluster: クラスターラベル
\item neighbor_method: 空間隣接点情報の計算方法
\item nsim: モンテカルロ・シミュレーションの実行回数
}
}
\description{
hstdbscanなどの結果について、時系列性と空間的集塊性の評価を行います。
}
\examples{
x <- seq(130, 140, by = 1)
y <- seq(30, 40, by = 1)
t <- as.POSIXct("2024-01-01 00:00:00", tz = "JST") + 3600 * seq(0, 23, by = 6)
geo <- sf::st_as_sf(expand.grid(x, y), coords = c("Var1", "Var2"), crs = 4326)

D <- abs(runif(nrow(geo) * length(t))) * 100
clust <- hstdbscan(x = geo, time = t, eps1 = 144, eps2 = 3600 * 6, minPts = 6,
                  vals = list(list(D = D,
                                   delta_eps = 20)),
                  metric = "geo", neighbortype = "spatial", dbscantype = "grid")
stclust(x = matrix(D, ncol = length(t)), cluster = cutclust(clust, 5)$cluster, geo = clust$results$geo)
}
